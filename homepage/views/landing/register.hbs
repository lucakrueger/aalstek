<!DOCTYPE html>
<html>
    <head>
        <title>Register</title>

        {{> 'head/meta'}}
        {{> 'head/style'}}

        <script src="js/form.js"></script>
    </head>
    <body>
        <div class="fixed w-full">
            {{> 'navigation/reduced/navbar'}}
        </div>

        <main class="flex flex-col h-screen justify-center items-center bg-slate-50">
            <div class="drop-shadow-md flex flex-col p-4 pb-6 justify-center items-center gap-4 border w-5/6 sm:w-3/5 md:w-2/5 border-slate-200 rounded-md bg-white">
                <span class="p-4 text-xl font-bold transition-all duration-300 text-black hover:text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-indigo-600">Create New Account</span>
                
                <div class="flex flex-col gap-2 w-2/3">
                    <span class="text-sm text-slate-500 font-medium" id="nameInputTitle">Full Name</span>
                    <input class="text-md text-slate-800 font-medium p-4 outline-none bg-slate-100 h-10 rounded-md" onkeyup="Form.name.validate()" type="name" id="nameInput"></input>
                </div>

                <div class="flex flex-col gap-2 w-2/3">
                    <span class="text-sm text-slate-500 font-medium" id="emailInputTitle">Email</span>
                    <input class="text-md text-slate-800 font-medium p-4 outline-none bg-slate-100 h-10 rounded-md" onkeyup="Form.email.validate()" type="email" id="emailInput"></input>
                </div>

                <div class="flex flex-col gap-2 w-2/3">
                    <span class="text-sm text-slate-500 font-medium" id="usernameInputTitle">Username</span>
                    <input class="text-md text-slate-800 font-medium p-4 outline-none bg-slate-100 h-10 rounded-md" onkeyup="Form.username.validate()" type="username" id="usernameInput"></input>
                </div>

                <div class="flex flex-col gap-2 w-2/3">
                    <span class="text-sm text-slate-500 font-medium" id="passwordInputTitle">Password</span>
                    <input class="text-md text-slate-800 font-medium p-4 outline-none bg-slate-100 h-10 rounded-md" onkeyup="Form.password.validate()" type="password" id="passwordInput"></input>
                </div>

                <div class="flex flex-col gap-2 w-2/3">
                    <span class="text-sm text-slate-500 font-medium" id="confirmPasswordInputTitle">Confirm Password</span>
                    <input class="text-md text-slate-800 font-medium p-4 outline-none bg-slate-100 h-10 rounded-md" onkeyup="Form.confirmPassword.validate()" type="password" id="confirmPasswordInput"></input>
                </div>

                <div class="flex flex-col justify-center items-center gap-2 w-2/3">
                    <a class="hover:cursor-pointer font-medium hover:bg-slate-800 transition-all duration-300 text-md text-slate-100 p-2 outline-none bg-slate-700 h-10 rounded-md w-full text-center" onclick="submitForm()">Register</a>
                </div>

                <a class="text-sm text-slate-500 font-medium p-2 outline-none h-10 rounded-md w-full text-center" href="/login">Or Login instead?</a>
            </div>
        </main>

        {{> 'navigation/reduced/footer'}}

        <script>
            let Form = loadForm({
                name: {
                    text: 'Full Name',
                    rules: [
                        {
                            rule: '(?=.{1,})',
                            reason: 'Field cannot be empty'
                        },
                    ]
                },
                email: {
                    text: 'Email',
                    rules: [
                        {
                            rule: '(?=.{1,})',
                            reason: 'Field cannot be empty'
                        },
                    ]
                },
                username: {
                    text: 'Username',
                    rules: [
                        {
                            rule: '(?=.{4,})',
                            reason: 'Needs at least 4 Characters'
                        },
                        {
                            rule: '(^[A-Za-z0-9]*$)',
                            reason: 'Only use Letters and Numbers'
                        }
                    ]
                },
                password: {
                    text: 'Password',
                    rules: [
                        {
                            rule: '(?=.{8,})',
                            reason: 'Needs at least 8 Characters'
                        },
                        {
                            rule: '(?=.*[A-Z])',
                            reason: 'Needs at least 1 Uppercase Letter'
                        },
                        {
                            rule: '(?=.*[a-z])',
                            reason: 'Needs at least 1 Lowercase Letter'
                        },
                        {
                            rule: '(?=.*[0-9])',
                            reason: 'Needs at least 1 Digit'
                        },
                        {
                            rule: '([^A-Za-z0-9])',
                            reason: 'Needs at leat 1 Special Character'
                        }
                    ]
                },
                confirmPassword: {
                    text: 'Confirm Password',
                    rules: [
                        {
                            rule: '(?=.{1,})',
                            reason: 'Field cannot be empty'
                        },
                        {
                            rule: (value) => {
                                return Form.password.input.value == value
                            },
                            reason: 'Passwords need to match'
                        }
                    ]
                }
            })

            const submitForm = () => {
                console.log(Form.validate())
                if(Form.validate() == false) return
                console.log('test')

                fetch('localhost:3000/api/login').then(response => response.text())
                    .then((text) => {
                        let response = JSON.parse(text)
                        console.log(response)
                        if(response.status == 200) {
                            location.href = 'localhost:3000'
                        }
                    })
            }
        </script>
    </body>
</html>