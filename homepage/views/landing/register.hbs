<!DOCTYPE html>
<html>
    <head>
        <title>Register</title>

        {{> 'head/meta'}}
        {{> 'head/style'}}

        <script src="js/form.js"></script>
    </head>
    <body>
        <div class="fixed w-full">
            {{> 'navigation/reduced/navbar'}}
        </div>

        <main class="flex flex-col h-screen justify-center items-center bg-slate-0">
            <div class="flex flex-col p-4 pb-6 justify-center items-center gap-4 w-5/6 sm:w-3/5 md:w-2/5 border-slate-200 rounded-md bg-white">
                <span class="p-4 text-xl font-bold transition-all duration-300 text-black hover:text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-indigo-600">Create New Account</span>
                
                <div class="flex flex-col gap-2 w-2/3">
                    <span class="text-sm text-slate-500 font-medium" id="nameInputTitle">Full Name</span>
                    <input class="text-md text-slate-800 font-medium p-4 outline-none bg-slate-100 h-10 rounded-md" onkeyup="Form.name.validate()" type="name" id="nameInput"></input>
                </div>

                <div class="flex flex-col gap-2 w-2/3">
                    <span class="text-sm text-slate-500 font-medium" id="emailInputTitle">Email</span>
                    <input class="text-md text-slate-800 font-medium p-4 outline-none bg-slate-100 h-10 rounded-md" onkeyup="Form.email.validate()" onblur="checkAccountAvailable()" type="email" id="emailInput"></input>
                </div>

                <div class="flex flex-col gap-2 w-2/3">
                    <span class="text-sm text-slate-500 font-medium" id="usernameInputTitle">Username</span>
                    <input class="text-md text-slate-800 font-medium p-4 outline-none bg-slate-100 h-10 rounded-md" onkeyup="Form.username.validate()" onblur="checkAccountAvailable()" type="username" id="usernameInput"></input>
                </div>

                <div class="flex flex-col gap-2 w-2/3">
                    <span class="text-sm text-slate-500 font-medium" id="passwordInputTitle">Password</span>
                    <input class="text-md text-slate-800 font-medium p-4 outline-none bg-slate-100 h-10 rounded-md" onkeyup="Form.password.validate()" type="password" id="passwordInput"></input>
                </div>

                <div class="flex flex-col gap-2 w-2/3">
                    <span class="text-sm text-slate-500 font-medium" id="confirmPasswordInputTitle">Confirm Password</span>
                    <input class="text-md text-slate-800 font-medium p-4 outline-none bg-slate-100 h-10 rounded-md" onkeyup="Form.confirmPassword.validate()" type="password" id="confirmPasswordInput"></input>
                </div>

                <div class="flex flex-col justify-center items-center gap-2 w-2/3">
                    <a class="hover:cursor-pointer font-medium hover:bg-slate-800 transition-all duration-300 text-md text-slate-100 p-2 outline-none bg-slate-700 h-10 rounded-md w-full text-center" onclick="submitForm()">Register</a>
                </div>

                <a class="text-sm text-slate-500 font-medium p-2 outline-none h-10 rounded-md w-full text-center" href="/login">Or Login instead?</a>
            </div>
        </main>

        {{> 'navigation/reduced/footer'}}

        <script src="js/forms.js"></script>

        <script>
            let Form = loadForm(registerForm)

            const checkAccountAvailable = () => {
                fetch('http://localhost:3000/api/account/exists', {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        username: Form.username.value(),
                        email: Form.email.value()
                    })
                }).then(response => response.text())
                .then(text => {
                    let res = JSON.parse(text)

                    if(res.exists == false) return

                    Form.email.validateResponse({
                        failed: true,
                        reason: 'Account already exists'
                    })

                    Form.username.validateResponse({
                        failed: true,
                        reason: 'Account already exists'
                    })
                })
            }

            const submitForm = () => {
                if(Form.validate() == false) return

                fetch('http://localhost:3000/api/register', {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: Form.jsonString()
                }).then(response => response.text())
                .then(text => {
                    let res = JSON.parse(text)

                    console.log(res)
                    if(res.created == true) {
                        window.location.href = 'http://localhost:3000'
                        return
                    }

                    Form.validateResponse(res.fields)
                })
            }
        </script>
    </body>
</html>