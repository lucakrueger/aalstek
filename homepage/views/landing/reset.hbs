<!DOCTYPE html>
<html>
    <head>
        <title>Reset</title>

        {{> 'head/meta'}}
        {{> 'head/style'}}

        <script src="js/form.js"></script>
    </head>
    <body>
        
        <div class="fixed w-full">
            {{> 'navigation/reduced/navbar'}}
        </div>

        <main class="flex flex-col h-screen justify-center items-center bg-slate-50">
            <div class="drop-shadow-md flex flex-col p-4 pb-6 justify-center items-center gap-4 border w-5/6 sm:w-3/5 md:w-2/5 border-slate-200 rounded-md bg-white">
                <span class="p-4 text-xl font-semibold transition-all duration-300 text-black hover:text-transparent bg-clip-text bg-gradient-to-r from-red-400 to-rose-600">Reset Password</span>

                <div class="flex flex-col gap-2 w-2/3">
                    <span class="text-sm text-slate-500 font-medium" id="passwordInputTitle">New Password</span>
                    <input class="text-md text-slate-800 p-4 font-medium outline-none bg-slate-100 h-10 rounded-md" onkeyup="Form.password.validate()" type="password" id="passwordInput"></input>
                </div>

                <div class="flex flex-col gap-2 w-2/3">
                    <span class="text-sm text-slate-500 font-medium" id="confirmPasswordInputTitle">Confirm New Password</span>
                    <input class="text-md text-slate-800 font-medium p-4 outline-none bg-slate-100 h-10 rounded-md" onkeyup="Form.confirmPassword.validate()" type="password" id="confirmPasswordInput"></input>
                </div>

                <div class="flex flex-col justify-center items-center gap-2 w-2/3 mb-10">
                    <a class="hover:cursor-pointer hover:bg-slate-800 transition-all duration-300 font-medium text-md text-slate-100 p-2 outline-none bg-slate-700 h-10 rounded-md w-full text-center" onclick="submitForm()">Reset</a>
                </div>
            </div>
        </main>

        {{> 'navigation/reduced/footer'}}
    </body>

    <script>
        let Form = loadForm({
            password: {
                text: 'New Password',
                rules: [
                    {
                        rule: '(?=.{8,})',
                        reason: 'Needs at least 8 Characters'
                    },
                    {
                        rule: '(?=.*[A-Z])',
                        reason: 'Needs at least 1 Uppercase Letter'
                    },
                    {
                        rule: '(?=.*[a-z])',
                        reason: 'Needs at least 1 Lowercase Letter'
                    },
                    {
                        rule: '(?=.*[0-9])',
                        reason: 'Needs at least 1 Digit'
                    },
                    {
                        rule: '([^A-Za-z0-9])',
                        reason: 'Needs at leat 1 Special Character'
                    }
               ] 
            },
            confirmPassword: {
                text: 'Confirm New Password',
                rules: [
                    {
                        rule: '(?=.{1,})',
                        reason: 'Field cannot be empty'
                    },
                    {
                        rule: (value) => {
                            return Form.password.input.value == value
                        },
                        reason: 'Passwords need to match'
                    }
                ]
            },
        })

        const submitForm = () => {
            if(Form.validate() == false) return

            fetch('localhost:8000/api/login').then(response => response.text())
            .then((text) => {
                let response = JSON.parse(text)
                console.log(response)
                if(response.status == 200) {
                    location.href = 'localhost:800'
                }
            })
        }
    </script>
</html>